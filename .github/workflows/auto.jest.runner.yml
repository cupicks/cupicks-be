name: Automated-Jest

on:
  pull_request:
    branches:
      - 'develop'

jobs:
  jest_runner:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3

      - name: Prepare Environment and Dependencies
        run:  |
          pwd
            touch .env.test
            echo PORT=${{secrets.TEST_PORT}} >> .env.test
            echo SALT=${{secrets.TEST_SALT}} >> .env.test
            echo CORS_URL_ONE_WITHOUT_PORT=${{secrets.TEST_CORS_URL_ONE_WITHOUT_PORT}} >> .env.test
            echo CORS_URL_TWO_WITHOUT_PORT=${{secrets.TEST_CORS_URL_TWO_WITHOUT_PORT}} >> .env.test
            echo CORS_URL_THREE_WITHOUT_PORT=${{secrets.TEST_CORS_URL_THREE_WITHOUT_PORT}} >> .env.test
            echo CORS_URL_FOUR_WITHOUT_PORT=${{secrets.TEST_CORS_URL_FOUR_WITHOUT_PORT}} >> .env.test
            echo FROTN_REDIRECT_URL_WITHOUT_PORT=${{secrets.TEST_FROTN_REDIRECT_URL_WITHOUT_PORT}} >> .env.test
            echo SERVER_URL_WITH_PORT=${{secrets.TEST_SERVER_URL_WITH_PORT}} >> .env.test
            echo JWT_ACCESS_EXPIRED_IN=${{secrets.TEST_JWT_ACCESS_EXPIRED_IN}} >> .env.test
            echo JWT_REFRESH_EXPIRED_IN=${{secrets.TEST_JWT_REFRESH_EXPIRED_IN}} >> .env.test
            echo JWT_VERIFY_EXPIRED_IN=${{secrets.TEST_JWT_VERIFY_EXPIRED_IN}} >> .env.test
            echo JWT_RESET_EXPIRED_IN=${{secrets.TEST_JWT_RESET_EXPIRED_IN}} >> .env.test
            echo JWT_HASH_ALGOIRHTM=${{secrets.TEST_JWT_HASH_ALGOIRHTM}} >> .env.test
            echo HASH_PASSPHRASE=${{secrets.TEST_HASH_PASSPHRASE}} >> .env.test
            echo MYSQL_HOST=${{secrets.TEST_MYSQL_HOST}} >> .env.test
            echo MYSQL_USER=${{secrets.TEST_MYSQL_USER}} >> .env.test
            echo MYSQL_DATABASE=${{secrets.TEST_MYSQL_DATABASE}} >> .env.test
            echo MYSQL_PASSWORD=${{secrets.TEST_MYSQL_PASSWORD}} >> .env.test
            echo MYSQL_CONNECTION_LIMIT=${{secrets.TEST_MYSQL_CONNECTION_LIMIT}} >> .env.test
            echo S3_ACCESS_KEY=${{secrets.TEST_S3_ACCESS_KEY}} >> .env.test
            echo S3_SECRET_KEY=${{secrets.TEST_S3_SECRET_KEY}} >> .env.test
            echo BUCKET=${{secrets.TEST_BUCKET}} >> .env.test
            echo REGION=${{secrets.TEST_REGION}} >> .env.test
            echo SES_API_VERSION=${{secrets.TEST_SES_API_VERSION}} >> .env.test
            echo SES_API_REGION=${{secrets.TEST_SES_API_REGION}} >> .env.test
            echo SES_ACCESS_KEY=${{secrets.TEST_SES_ACCESS_KEY}} >> .env.test
            echo SES_SECRET_KEY=${{secrets.TEST_SES_SECRET_KEY}} >> .env.test
            echo SES_SENDER_EMAIL=${{secrets.TEST_SES_SENDER_EMAIL}} >> .env.test

          npm ci
          npm test
      
      - name: Automate Run Test Code with jest
        uses: actions/github-script@0.2.0
        with:
          github-token: ${{github.token}}
          script: | 
            const ref = "${{github.ref}}"
            const pull_number = Number(ref.split("/")[2])
            await github.pulls.createReview({
              ...context.repo,
              pull_number,
              body:"테스트코드를 다시 확인해주세요. ",
              event: "REQUEST_CHANGES"
            })
            await github.pulls.update({
              ...context.repo,
              pull_number,
              state: "closed"
            }) 
        if: failure()