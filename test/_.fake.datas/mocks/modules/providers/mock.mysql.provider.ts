import { PoolConnection } from "mysql2/promise";

export const getMockConnection = async (): Promise<PoolConnection> => {
    return {
        config: {},
        threadId: 1,
        connect: jest.fn(),
        ping: jest.fn(),
        beginTransaction: jest.fn(),
        commit: jest.fn(),
        rollback: jest.fn(),
        changeUser: jest.fn(),
        query: jest.fn(),
        execute: jest.fn(),
        unprepare: jest.fn(),
        end: jest.fn(),
        destroy: jest.fn(),
        pause: jest.fn(),
        resume: jest.fn(),
        escape: jest.fn(),
        escapeId: jest.fn(),
        format: jest.fn(),
        addListener: jest.fn(),
        emit: jest.fn(),
        eventNames: jest.fn(),
        getMaxListeners: jest.fn(),
        listenerCount: jest.fn(),
        listeners: jest.fn(),
        off: jest.fn(),
        on: jest.fn(),
        once: jest.fn(),
        prependListener: jest.fn(),
        prependOnceListener: jest.fn(),
        rawListeners: jest.fn(),
        release: jest.fn(),
        removeAllListeners: jest.fn(),
        removeListener: jest.fn(),
        setMaxListeners: jest.fn(),
    };
};
export const MockMysqlProvider = {
    getConnection: jest.fn(async (): Promise<PoolConnection> => {
        return {
            config: {},
            threadId: 1,
            connect: jest.fn(),
            ping: jest.fn(),
            beginTransaction: jest.fn(),
            commit: jest.fn(),
            rollback: jest.fn(),
            changeUser: jest.fn(),
            query: jest.fn(),
            execute: jest.fn(),
            unprepare: jest.fn(),
            end: jest.fn(),
            destroy: jest.fn(),
            pause: jest.fn(),
            resume: jest.fn(),
            escape: jest.fn(),
            escapeId: jest.fn(),
            format: jest.fn(),
            addListener: jest.fn(),
            emit: jest.fn(),
            eventNames: jest.fn(),
            getMaxListeners: jest.fn(),
            listenerCount: jest.fn(),
            listeners: jest.fn(),
            off: jest.fn(),
            on: jest.fn(),
            once: jest.fn(),
            prependListener: jest.fn(),
            prependOnceListener: jest.fn(),
            rawListeners: jest.fn(),
            release: jest.fn(),
            removeAllListeners: jest.fn(),
            removeListener: jest.fn(),
            setMaxListeners: jest.fn(),
        };
    }),
};
